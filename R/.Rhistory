group_by(제조사) %>%
summarise(평균 연비 = mean(고속도로))
mpg %>%
select(제조사, 고속도로) %>%
group_by(제조사) %>%
summarise(평균 연비 = mean(고속도로))
# 제조사별 고속도로의 평균 연비는 어디가 가장 좋은가?
# 컬럼 제조사, 고속도로 선택
mpg %>%
select(제조사, 고속도로) %>%
group_by(제조사) %>%
summarise(평균 연비 = mean(고속도로))
# 제조사별 고속도로의 평균 연비는 어디가 가장 좋은가?
# 컬럼 제조사, 고속도로 선택
mpg %>%
select(제조사, 고속도로) %>%
group_by(제조사)
# 제조사별 고속도로의 평균 연비는 어디가 가장 좋은가?
# 컬럼 제조사, 고속도로 선택
mpg %>%
select(제조사, 고속도로) %>%
group_by(제조사)
# 제조사별 고속도로의 평균 연비는 어디가 가장 좋은가?
# 컬럼 제조사, 고속도로 선택
mpg %>%
select(제조사, 고속도로) %>%
group_by(제조사)
# 제조사별 고속도로의 평균 연비는 어디가 가장 좋은가?
# 컬럼 제조사, 고속도로 선택
mpg %>%
select(제조사, 고속도로) %>%
group_by(제조사) %>%
summarise(평균연비 = mean(고속도로)) %>%
arrange(desc(평균연비)) %>%
head(5)
# 제조사별 고속도로의 평균 연비는 어디가 가장 좋은가?
# 컬럼 제조사, 고속도로 선택
mpg %>%
select(제조사, 고속도로) %>%
group_by(제조사) %>%
summarise(평균연비 = mean(고속도로, na.rm = T)) %>%
arrange(desc(평균연비)) %>%
head(5)
mpg %>%
filter(is.na(고속도로)) %>%
select(제조사, 고속도로) %>%
group_by(제조사) %>%
summarise(평균연비 = mean(고속도로)) %>%
arrange(desc(평균연비)) %>%
head(5)
mpg %>%
filter(!is.na(고속도로)) %>%
select(제조사, 고속도로) %>%
group_by(제조사) %>%
summarise(평균연비 = mean(고속도로)) %>%
arrange(desc(평균연비)) %>%
head(5)
# 배경 레이어 생성
ggplot(
data = mpg,
aes( # 축
x = displ,
y = 고속도로
)
)
# 배경 레이어 생성
ggplot(
data = mpg,
aes( # 축
x = displ,
y = 고속도로
)
) + geom_point()
install.packages("extrafont")
library(extrafont)
font_import()
library(ggplot2)
theme_set(theme_grey(base_family = "AppleGothic"))
# 배경 레이어 생성
ggplot(
data = mpg,
aes( # 축
x = displ,
y = 고속도로
)
) + geom_point()
# 배경 레이어 생성
ggplot(
data = mpg,
aes( # 축
x = displ,
y = 고속도로
)
) + geom_point() + xlim(3,6)
# 막대 그래프
mpg %>%
group_by(구동방식) %>%
summarise(평균연비 = mean(고속도로, na.rm = T))
# 막대 그래프
mpg %>%
group_by(구동방식) %>%
summarise(평균연비 = mean(고속도로, na.rm = T)) -> group_data
ggplot(
data = group_data,
aes(
x = 구동방식,
y = 평균연비
)
) + geom_col()
ggplot(
data = mpg,
aes(
x = 구동방식
)
) + geom_bar()
# 라인 그래프 : 제조년도별 생산 차량의 개수
mpg
# 라인 그래프 : 제조년도별 생산 차량의 개수
table(mpg$year)
mpg %>%
group_by(year) %>%
summarise(count = n())
mpg %>%
group_by(year) %>%
summarise(count = n()) -> group_data2 # 개수 체크
ggplot(
data = group_data2,
aes(
x = year,
y = count
)
) + geom_line()
ggplot(
data = economics,
aes(
x = date,
y = unemploy
)
) + geom_line()
mpg <- ggplot2 :: mpg
boxplot(mpg$hwy)
ggplot(
data = mpg,
aes(
x = drv,
y = hwy
)
) + boxplot()
ggplot(
data = mpg,
aes(
x = drv,
y = hwy
)
) + geom_boxplot()
# sav 파일 로드
# foreign 라이브러리 설치
install.packages('foreign')
library(foreign)
welfare <- read.spss("../csv/Koweps.sav", to.data.frame = T)
str(welfare)
# 컬럼의 이름 변경
welfare %>%
rename(
gender = h10_g3,
birth = h10_g4,
income = p1002_8aq1,
code_job = h10_eco9
)
# 컬럼의 이름 변경
welfare %>%
rename(
gender = h10_g3,
birth = h10_g4,
income = p1002_8aq1,
code_job = h10_eco9
) -> welfare
# 특정 컬럼 추출
welfare_copy <- welfare[c(
'gender','birth','income','code_job'
)]
# 결측치 개수 확인
table(is.na(welfare_copy))
table(is.na(welfare_copy$birth))
table(is.na(welfare_copy$income))
table(is.na(welfare_copy$code_job))
table(is.na(welfare_copy$gender))
# 성별 데이터에서 이상치가 존재하는가 ?
table(welfare_copy$gender)
ifelse(welfare_copy$gender==1, 'male', 'female')
ifelse(welfare_copy$gender==1, 'male', 'female') -> welfare_copy$gender
table(welfare_copy$gender)
# case1
welfare_copy$income > 0 & welfare_copy$income < 9999
# case1
welfare_copy$income > 0 & welfare_copy$income < 9999 -> flag
# case2
welfare_copy$income == 0 | welfare_copy$income == 9999 -> flag2
ifelse(flag2, NA, welfare_copy$income)
# case3
welfare_copy$income %in% c(0,9999) -> flag3
ifelse(flag3, NA, welfare_copy$income) -> welfare_copy$income
# 성별을 기준으로 평균 임금의 차이가 존재하는가
welfare_copy %>%
filter(!is.na(income)) %>%
select(gender, income) %>%
group_by(gender) %>%
summarise(mean = mean(income))
# 성별을 기준으로 평균 임금의 차이가 존재하는가
welfare_copy %>%
filter(!is.na(income)) %>%
select(gender, income) %>%
group_by(gender) %>%
summarise(mean_income = mean(income))
# 성별을 기준으로 평균 임금의 차이가 존재하는가
welfare_copy %>%
filter(!is.na(income)) %>%
select(gender, income) %>%
group_by(gender) %>%
summarise(mean_income = mean(income)) -> gender_data
ggplot(
data = gender_data,
aes(
x = gender,
y = mean_income
)
) + geom_col()
# 나이에 따른 임금의 차이는?
welfare_copy
# 나이에 따른 임금의 차이는?
# age 컬럼 생성 : 기준년도 - birth
2015 - welfare_copy$birth
# 나이에 따른 임금의 차이는?
# age 컬럼 생성 : 기준년도 - birth
2015 - welfare_copy$birth -> age
welfare_copy$age <- age
welfare_copy %>%
filter(!is.na(income)) %>%
group_by(age)
group_by(age) %>%
summarise(mean_age = mean(income))
table(age)
welfare_copy %>%
filter(!is.na(income)) %>%
select(age, income) %>%
group_by(age) %>%
summarise(mean_age = mean(income))
welfare_copy %>%
filter(!is.na(income)) %>%
select(age, income) %>%
group_by(age) %>%
summarise(mean_income = mean(income))
welfare_copy %>%
filter(!is.na(income)) %>%
select(age, income) %>%
group_by(age) %>%
summarise(mean_income = mean(income)) %>%
arrange(desc(mean_income))
welfare_copy %>%
filter(!is.na(income)) %>%
select(age, income) %>%
group_by(age) %>%
summarise(mean_income = mean(income)) %>%
arrange(desc(mean_income)) -> age_data
ggplot(
data = age_data,
aes(
x = age,
y = mean_income
)
) + geom_bar()
welfare_copy %>%
filter(!is.na(income)) %>%
select(age, income) %>%
group_by(age) %>%
summarise(mean_income = mean(income)) %>%
arrange(desc(mean_income)) -> age_data
ggplot(
data = age_data,
aes(
x = age,
y = mean_income
)
) + geom_bar()
ggplot(
data = age_data,
aes(
x = age,
y = mean_income
)
) + geom_col()
arrange(desc(age_data))
arrange(desc(welfare_copy$age))
arrange(desc(mean_income))
welfare_copy %>%
arrange(desc(mean_income))
age_data %>%
arrange(desc(mean_income))
age_data %>%
arrange(desc(mean_income)) %>%
head(5)
welfare_copy %>%
mutate(ageg)
welfare_copy
ifelse(welfare_copy$age < 40, 'young',ifelse(welfare_copy$age < 60),'middle','old')
ifelse(welfare_copy$age < 40, 'young','old')
ifelse(welfare_copy$age < 40, 'young',(ifelse(welfare_copy$age < 60),'middle','old'))
ifelse(welfare_copy$age < 40, 'young', ifelse(welfare_copy$age < 60),'middle','old')
welfare_copy %>%
ifelse(age < 40, 'young','old')
welfare_copy %>%
mutate(
ageg = ifelse(age < 40,'young','old')
)
welfare_copy %>%
mutate(
ageg = ifelse(age < 40,'young','old')
) %>%
select(ageg, income)
welfare_copy %>%
mutate(
ageg = ifelse(age < 40,'young','old')
) %>%
select(ageg, income) %>%
group_by(ageg) %>%
summarise(mean_income = mean(income, na.rm = T))
welfare_copy %>%
mutate(
ageg = ifelse(age < 40,'young','old')
) %>%
select(ageg, income) %>%
group_by(ageg) %>%
summarise(mean_income = mean(income, na.rm = T)) -> ageg_data
ggplot(
data = ageg_data,
aes(
x = age,
y = mean_income
)
) + geom_col()
welfare_copy %>%
mutate(
ageg = ifelse(age < 40,'young','old')
) %>%
select(ageg, income) %>%
group_by(ageg) %>%
summarise(mean_income = mean(income, na.rm = T)) -> ageg_data
ggplot(
data = ageg_data,
aes(
x = age,
y = mean_income
)
) + geom_col()
ggplot(
data = ageg_data,
aes(
x = age,
y = mean_income
)
) + geom_col()
welfare_copy %>%
mutate(
ageg = ifelse(age < 40,'young','old')
) %>%
select(ageg, income) %>%
group_by(ageg) %>%
summarise(mean_income = mean(income, na.rm = T))
welfare_copy %>%
mutate(
ageg = ifelse(age < 40,'young','old')
) %>%
select(ageg, income) %>%
group_by(ageg) %>%
summarise(mean_income = mean(income, na.rm = T)) -> ageg_data
ggplot(
data = ageg_data,
aes(
x = ageg,
y = mean_income
)
) + geom_col()
welfare_copy %>%
mutate(
ageg = ifelse(age < 40,'young',
ifelse(age>=60, 'old', 'middle'))
) %>%
select(ageg, income) %>%
group_by(ageg) %>%
summarise(mean_income = mean(income, na.rm = T)) -> ageg_data
welfare_copy %>%
mutate(
ageg = ifelse(age < 40,'young',
ifelse(age>=60, 'old', 'middle'))
) %>%
select(ageg, income) %>%
group_by(ageg) %>%
summarise(mean_income = mean(income, na.rm = T)) -> ageg_data
welfare_copy %>%
mutate(
ageg = ifelse(age < 40,'young',
ifelse(age>=60, 'old', 'middle'))
) %>%
select(ageg, income) %>%
group_by(ageg) %>%
summarise(mean_income = mean(income, na.rm = T))
welfare_copy %>%
mutate(
ageg = ifelse(age < 40,'young',
ifelse(age>=60, 'old', 'middle'))
) %>%
select(ageg, income) %>%
group_by(ageg) %>%
summarise(mean_income = mean(income, na.rm = T)) -> ageg_data
ggplot(
data = ageg_data,
aes(
x = ageg,
y = mean_income
)
) + geom_col()
ggplot(
data = ageg_data,
aes(
x = ageg,
y = mean_income
)
) + geom_col() + scale_x_discrete(limits = c('young','middle','old'))
# excel 파일 로드
install.packages('readxl')
library(readxl)
read_excel('../csv/Koweps_Codebook.xlsx')
read_excel('../csv/Koweps_Codebook.xlsx', sheet = 2)
read_excel('../csv/Koweps_Codebook.xlsx', sheet = 2) -> code_book
# join 결합
# welfare_copy, code_book -> 기준 : code_job
left_join_data <- left_join(
welfare_copy,
code_book,
by='code_job'
)
str(left_join_data)
inner_join_data <- inner_join(
welfare_copy,
code_book,
by='code_job'
)
str(inner_join_data)
welfare_copy %>%
filter(is.na(code_job))
welfare_copy %>%
filter(is.na(code_job)) !is.na(income)
welfare_copy %>%
filter(is.na(code_job) & !is.na(income))
left_join_data
# 직업별 평균 임금이 높은 상위 5개
left_join_data %>%
filter(!is.na(income)) %>%
select(job, income) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
arrange(desc(mean_income)) %>%
head(5)
left_join_data %>%
filter(!is.na(income) & gender == 'male')
# 직업별 평균 임금이 높은 상위 5개
left_join_data %>%
#  filter(!is.na(income) & gender == 'male') # 남자 기준
filter(!is.na(income)) %>%
select(job, income) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
arrange(desc(mean_income)) %>%
head(5)
# 직업별 평균 임금이 높은 상위 5개
left_join_data %>%
filter(!is.na(income) & gender == 'male') %>%  # 남자 기준
#  filter(!is.na(income)) %>%
select(job, income) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
arrange(desc(mean_income)) %>%
head(5)
# 직업별 평균 임금이 높은 상위 5개
left_join_data %>%
#  filter(!is.na(income) & gender == 'male') %>%  # 남자 기준
filter(!is.na(income)) %>%
select(job, income) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
arrange(desc(mean_income)) %>%
head(5)
# income 결측치를 0
ifelse(is.na(left_join_data$income), 0, left_join_data$income) -> left_join_data$income
# 직업별 평균 임금이 높은 상위 5개
left_join_data %>%
#  filter(!is.na(income) & gender == 'male') %>%  # 남자 기준
filter(!is.na(income)) %>%
select(job, income) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
arrange(desc(mean_income)) %>%
head(5)
# income 결측치를 0
ifelse(is.na(left_join_data$income), 0, left_join_data$income) -> left_join_data$income
left_join_data %>%
filter(gender == 'female' & !is.na(job)) %>%
select(job, income) %>%
group_by(job) %>%
summarise(mean_income = mean(income)) %>%
arrange(-mean_income) %>%
head(5)
