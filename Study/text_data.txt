 데이터 분석을 위한 데이터베이스금융 빅데이터 과정CONTENTS01    02    03DataBase- DataBase- Database 특징- SQL? NoSQL?- SQL이란?- MySQL 설치- SQL명령어- MongoDB란?- MongoDB 설치- MongoDB 명령어mySQLMongoDBDataBase데이터 분석을 위한 데이터베이스데이터 분석을 위한 데이터베이스01DataBase데이터베이스(DB: database)는 통합하여 관리되는 데이터의 집합체를 의미한다.이는 중복된 데이터를 없애고, 자료를 구조화하여, 효율적인 처리를 할 수 있도록 관리된다.따라서, 여러 업무에 여러 사용자가 데이터 베이스를 사용할 수 있다.이러한 데이터베이스는 응용 프로그램과는 다른 별도의 미들웨어에 의해 관리된다.데이터베이스를 관리하는 이러한 미들웨어를 데이터베이스 관리 시스템(DBMS: Database Management System)이라고 한다.DataBase데이터 분석을 위한 데이터베이스01DataBase1. 사용자의 질의에 대하여 즉각적인 처리와 응답이 이루어진다.2. 생성, 수정, 삭제를 통하여 항상 최신의 데이터를 유지한다.3. 사용자들이 원하는 데이터를 동시에 공유할 수 있다.4. 사용자가 원하는 데이터를 주소가 아닌 내용에 따라 참조 할 수 있다.5. 응용프로그램과 데이터베이스는 독립되어 있으므로, 데이터의 논리적 구조와 응용프로그램은 별개로 동작된다.DataBase 특징데이터 분석을 위한 데이터베이스01DataBaseSQL? NoSQLMySQL데이터 분석을 위한 데이터베이스데이터 분석을 위한 데이터베이스02MySQLSQL(Structured Query Language)은 데이터베이스에서 데이터를 정의, 조작, 제어하기 위해 사용하는 언어입니다.따라서 SQL 구문도 위의 목적에 맞게 크게 세 가지로 구분할 수 있습니다.SQL이란?데이터 분석을 위한 데이터베이스02MySQLhttps://dev.mysql.com/downloads/mysql/링크를 통해 인스톨 파일을 다운로드파일 실행 후 Custom 체크 - Next MySQL 설치데이터 분석을 위한 데이터베이스02MySQLMySQL Server와 MySQL Workbench 추가 후 NextMySQL 설치데이터 분석을 위한 데이터베이스02MySQL설치 위치 설정 페이지 바로 NextMySQL 설치데이터 분석을 위한 데이터베이스02MySQL설치 목록 확인 ExecuteMySQL 설치데이터 분석을 위한 데이터베이스02MySQL설치 목록 확인 Execute  설치가 완료 되면 NextMySQL 설치데이터 분석을 위한 데이터베이스02MySQL네트워크 타입 설정 부분 NextMySQL 설치데이터 분석을 위한 데이터베이스02MySQLSQL의 Password 설정 부분 각자 비밀번호를 입력 후 Check   NextMySQL 설치데이터 분석을 위한 데이터베이스02MySQL새로운 데이터베이스 생성CREATE DATABASE 데이터베이스이름;새로운 데이터베이스 선택USE 데이터베이스이름;테이블 생성CREATE TABLE 테이블이름(    필드이름1 필드타입1,    필드이름2 필드타입2,    ...);CREATE 문데이터 분석을 위한 데이터베이스02MySQL데이터의 필드 타입데이터 분석을 위한 데이터베이스02MySQL제약 조건(constraint)이란 데이터의 무결성을 지키기 위해 데이터를 입력받을 때 실행되는 검사 규칙을 의미한다.이러한 제약 조건은 CREATE 문으로 테이블을 생성할 때나, ALTER 문으로 필드를 추가할 때도 설정할 수도 있다.CREATE TABLE 문에서 사용할 수 있는 제약 조건은 다음과 같다.NOT NULL : 해당 필드는 NULL 값을 저장할 수 없게 된다.2. UNIQUE : 해당 필드는 서로 다른 값을 가져야만 한다.3. PRIMARY KEY : 해당 필드가 NOT NULL과 UNIQUE 제약 		       조건의 특징을 모두 가지게 된다.4. FOREIGN KEY : 하나의 테이블을 다른 테이블에 의존하게 		       만든다.5. DEFAULT : 해당 필드의 기본값을 설정한다.제약 조건데이터 분석을 위한 데이터베이스02MySQLAUTO_INCREMENT 키워드를 사용하면 해당 필드의 값을 1부터 시작하여 새로운 레코드가 추가될 때마다 1씩 증가된 값을 저장한다.이때 AUTO_INCREMENT 키워드 다음에 대입 연산자(=)를 사용하여 시작 값을 변경할 수 있다.제약 조건데이터 분석을 위한 데이터베이스02MySQL데이터베이스 수정	ALTER DATABASE 데이터베이스이름 CHARACTER = 문자집합이름	ALTER DATABASE 데이터베이스이름 COLLATE = 콜레이션이름테이블 수정	ALTER TABLE 테이블이름 OPTIONALTER 문데이터 분석을 위한 데이터베이스02MySQLALTER TABLE 문은 테이블에 필드를 추가, 삭제, 수정을 할수 있게 해준다. ADD	ALTER TABLE 테이블이름 ADD 필드이름 필드타입;DROP	ALTER TABLE 테이블이름 DROP 필드이름MODIFY COLUMN	ALTER TABLE 테이블이름 MODIFY 	COLUMN 필드이름 필드타입ALTER 문 (테이블 수정)데이터 분석을 위한 데이터베이스02MySQLDROP문을 사용하면 데이터베이스나 테이블을 삭제 할 수 있다.DROP DATABASE 데이터베이스이름2.  DROP TABLE 테이블 이름DROP 문데이터 분석을 위한 데이터베이스02MySQLINSERT INTO문을 사용하여 테이블에 새로운 값을 추가 할 수 있다. INSERT INTO 테이블이름(필드이름1, 필드이름2, 필드이름3, …) VALUES (데이터값1, 데이터값2, 데이터값3, …);INSERT INTO 테이블이름 VALUES (데이터값1, 데이터값2, 데이터값3, …);두번째 문법과 같이 사용을 하면 테이블의 필드에 순서대로 자동 대입이 된다. INSERT 문데이터 분석을 위한 데이터베이스02MySQLUPDATE문은 테이블의 내용을 수정할 수 있다. UPDATE 테이블이름 SET 필드이름1 = 데이터값1, 필드이름2 = 데이터값2, …. WHERE 필드이름 = 데이터값;WHERE절의 조건에 맞는 테이블의 값을 수정한다. WHERE절이 없다면 테이블의 모든 값을 수정한다. UPDATE 문데이터 분석을 위한 데이터베이스02MySQLDELETE문은 테이블의 데이터 값을 삭제 할 수 있다. 	DELETE FROM 테이블이름 WHERE 필드이름 = 데이터값;WHERE절에 만족하는 테이블의 값만 삭제한다. UPDATE문과 마찬가지로 WHERE절이 없으면 테이블의 모든 데이터가 삭제된다.(DROP문과의 차이는 DROP문은 테이블을 삭제 DELETE문은 테이블 내의 데이터만 삭제한다.)DELETE 문데이터 분석을 위한 데이터베이스02MySQLSELECT문은 테이블의 데이터를 선택 할 수 있다.	SELECT 필드이름 FROM 테이블이름 [WHERE 조건식];	SELECT * FROM 테이블이름필드이름에 *을 넣게 되면 모든 필드 값의 데이터를 선택한다.SELECT 문데이터 분석을 위한 데이터베이스02MySQLSQL에도 프로그래밍 언어에서의 IF문과 같은 조건문이 존재합니다.	WHERE {COLUMN} = {VALUE};“=” 위치에 “<>”, “!=”, “>”, “>=”, “<”, “<=” 등의 비교연산자 사용	WHERE {COLUMN} IN (VALUE_LIST);리스트에 없는 값을 선택할 땐 NOT IN 사용WHERE절데이터 분석을 위한 데이터베이스02MySQLJOIN데이터 분석을 위한 데이터베이스02MySQLJOIN은 데이터베이스 내의 여러 테이블에서 가져온 컬럼 값들을 조합하여 하나의 집합으로 표현해준다.즉 서로 다른 테이블에서 데이터를 가져올 때 사용한다. JOIN데이터 분석을 위한 데이터베이스02MySQLA, B 테이블 중 A값의 전체와 A의 key 값과 B의 Key 값이 같은 결과를 출력한다. 	SELECT A.컬럼명1, A.컬럼명2, B.컬럼명1, B.컬럼명2 FROM 	A LEFT JOIN B ON A.Key = B.Key;RIGHT JOIN은 대상 테이블만 다르게 설정하면 된다. LEFT JOIN데이터 분석을 위한 데이터베이스02MySQLA, B 테이블 중 두 테이블의 교집합인 데이터를 출력한다. 	SELECT A.컬럼명1, A.컬럼명2, B.컬럼명1, B.컬럼명2 FROM 	A INNER JOIN B ON A.key = B.KeyINNER JOIN데이터 분석을 위한 데이터베이스02MySQLMySQL에서는 FULL OUTER JOIN를 지원하지 않는다. LEFT JOIN과 RIGHT JOIN을 이용하여 FULL OUTER JOIN을 사용 할 수 있다. FULL OUTER JOIN데이터 분석을 위한 데이터베이스02MySQLSELECT 문으로 데이터를 조회할 때 ORDER BY를 추가하여 사용하면 지정된 컬럼을 기준으로 정렬이 가능하다. 	ASC : 오름차순 (기본값)	DESC : 내림차순오름차순 정렬	SELECT * FROM 테이블명 ORDER BY 컬럼명 ASC;내림차순 정렬	SELECT * FROM 테이블명 ORDER BY 컬럼명 DESC;ORDER BY데이터 분석을 위한 데이터베이스02MySQLGROUP BY는 유형별로 개수를 알고 싶을 때 사용한다.	GROUP BY : 특정 컬럼을 그룹화	HAVING : 그룹화한 결과에 조건을 건다 HAVING과 WHERE의 차이는 WHERE은 그룹화 하기 전 조건이고, HAVING은 그룹화 후의 조건이다.GROUP BY데이터 분석을 위한 데이터베이스02MySQL그룹화	SELECT * FROM 테이블명 GROUP BY 그룹화할 컬럼명;조건 처리 후 그룹화	SELECT * FROM 테이블명 WHERE 조건식 GROUP BY 	그룹화할 컬럼명;그룹화 후 조건 처리	SELECT * FROM 테이블명 GROUP BY 그룹화할 컬럼명 	HAVING 조건식;GROUP BY데이터 분석을 위한 데이터베이스02MySQL조건 처리 후 그룹화 후 조건 처리	SELECT * FROM 테이블명 WHERE 조건식 GROUP BY 	그룹화할 컬럼명 HAVING 조건식;ORDER BY절 포함	SELECT * FROM 테이블명 WHERE 조건식 GROUP BY 	그룹화할 컬럼명 HAVING 조건식 ORDER BY 컬럼명;GROUP BYMongoDB데이터 분석을 위한 데이터베이스데이터 분석을 위한 데이터베이스03MongoDB몽고DB(MongoDB←HUMONGOUS)는 크로스 플랫폼 도큐먼트 지향 데이터베이스 시스템이다. NoSQL 데이터베이스로 분류되는 몽고DB는 JSON과 같은 동적 스키마형 도큐먼트들(몽고DB는 이러한 포맷을 BSON이라 부름)을 선호함에 따라 전통적인 테이블 기반 관계형 데이터베이스 구조의 사용을 하지 않는다.이로써 특정한 종류의 애플리케이션을 더 쉽고 더 빠르게 데이터 통합을 가능케 한다. 아페로 GPL과 아파치 라이선스를 결합하여 공개된 몽고DB는 자유-오픈 소스 소프트웨어이다. MongDB란?데이터 분석을 위한 데이터베이스03MongoDBhttps://www.mongodb.com/try/download/enterprise링크를 통해 인스톨 파일 다운로드MongDB 설치데이터 분석을 위한 데이터베이스03MongoDBI accept the terms in the License Agreement 체크 후 NextMongDB 설치데이터 분석을 위한 데이터베이스03MongoDBComplete 버튼 클릭MongDB 설치데이터 분석을 위한 데이터베이스03MongoDB설치 위치 설정 NextMongDB 설치데이터 분석을 위한 데이터베이스03MongoDBInstall MongoDB Compass 체크가 되어 있지 않다면 체크 후 NextMongDB 설치데이터 분석을 위한 데이터베이스03MongoDBwindow키 + S키를 누른 후 시스템 환경 변수 실행환경 변수 클릭MongDB 환경 변수 편집데이터 분석을 위한 데이터베이스03MongoDB시스템 변수에서 Path 더블 클릭MongDB 환경 변수 편집데이터 분석을 위한 데이터베이스03MongoDB하단 빈 칸에 MongoDB를 설치한 디렉토리(C:\Program Files\MongoDB\Server\5.0\bin)를 추가한 후 확인MongDB 환경 변수 편집데이터 분석을 위한 데이터베이스03MongoDB명령 프롬프트 실행 후 mongo --version 를 입력하여 환경 변수 확인MongDB 환경 변수 편집데이터 분석을 위한 데이터베이스03MongoDBDataBase : Collection의 물리적 컨테이너이다. Collection : MySQL의 table과 같다고 생각하면 된다. Document의 그룹이다.Document : 한 개 이상의 Key-value 쌍으로 이루어진 구조이다. Key/Field : MySQL에서 Column과 같다고 생각하면 된다. 데이터 구조데이터 분석을 위한 데이터베이스03MongoDBshow dbs : 데이터베이스 리스트 출력db : 현재 사용중인 데이터베이스 이름 출력db.stats() : 현재 사용중인 데이터베이스의 정보 출력use 데이터베이스명 : 사용하려는 데이터베이스를 바꿔준다.		     (데이터베이스가 존재하지 않는다면 		      데이터베이스를 생성한다.)db.dropDatabase() : 데이터베이스를 삭제기본 명령어데이터 분석을 위한 데이터베이스03MongoDBdb.createCollection(“Collection명”, {capped:true, size:6142800, max:10000})	capped : bool타입, true로 설정 시 활성화 되며 사이즈를 		초과하게 되면 가장 오래된 데이터를 덮어쓴다.	size : capped가 true인 경우 필수로 설정. 해당 Collection의 	       최대 사이즈	max : 해당 Collection에 추가할 수 있는 최대 document 	        개수기본 명령어데이터 분석을 위한 데이터베이스03MongoDBdb.(Collection명).insert({ key : value }), single	key/field 값을 입력한다. 	Collection이 존재하지 않는다면 Collection을 자동으로 	생성한다.db.(Collection명).insert([{ key1 : value1 }, { key2 : value2 }])	key/field 값을 대괄호로 묶어서 멀티로 입력이 가능하다.CRUD데이터 분석을 위한 데이터베이스03MongoDBdb.(Collection명).drop()	해당하는 Collection을 제거한다. 	제거 전에 데이터베이스를 설정해야 된다. db.(Collection명).find()	Document 리스트를 확인한다.db.(Collection명).remove({key1 : value1})		Document에서 해당하는 리스트를 삭제한다.CRUD과목이름이나 영문타이틀THANKYOU